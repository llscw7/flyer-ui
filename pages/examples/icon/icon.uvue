<template>
	<!-- #ifdef APP -->
	<scroll-view class="container">
	<!-- #endif -->
		<view class="demo-page">
			<!-- 页面标题 -->
			<view class="demo-header">
				<text class="demo-title">Icon 图标</text>
				<text class="demo-desc">语义化的矢量图形，支持内置uni-icon和自定义iconfont。</text>
			</view>

			<!-- 内置uni-icon图标 -->
			<view class="demo-section">
				<text class="demo-section-title">内置 uni-icon 图标</text>
				<text class="demo-section-desc">uni-app x 内置的字体图标，无需额外配置</text>
				<view class="demo-content">
					<view class="icon-grid">
						<view class="icon-item" v-for="(icon, index) in uniIcons" :key="index">
							<flyer-icon 
								:name="icon.name" 
								:size="24" 
								color="#007aff"
								font-family="uni-icon"
								@click="handleIconClick(icon.name)"
							></flyer-icon>
							<text class="icon-name">{{ icon.name }}</text>
						</view>
					</view>
				</view>
			</view>

			<!-- 不同尺寸 -->
			<view class="demo-section">
				<text class="demo-section-title">不同尺寸</text>
				<view class="demo-content">
					<view class="size-demo">
						<view class="size-item">
							<flyer-icon name="home" :size="16" color="#333333"></flyer-icon>
							<text class="size-label">16px</text>
						</view>
						<view class="size-item">
							<flyer-icon name="home" :size="20" color="#333333"></flyer-icon>
							<text class="size-label">20px</text>
						</view>
						<view class="size-item">
							<flyer-icon name="home" :size="24" color="#333333"></flyer-icon>
							<text class="size-label">24px</text>
						</view>
						<view class="size-item">
							<flyer-icon name="home" :size="32" color="#333333"></flyer-icon>
							<text class="size-label">32px</text>
						</view>
						<view class="size-item">
							<flyer-icon name="home" :size="48" color="#333333"></flyer-icon>
							<text class="size-label">48px</text>
						</view>
					</view>
				</view>
			</view>

			<!-- 不同颜色 -->
			<view class="demo-section">
				<text class="demo-section-title">不同颜色</text>
				<view class="demo-content">
					<view class="color-demo">
						<flyer-icon name="success" :size="32" color="#4cd964"></flyer-icon>
						<flyer-icon name="info" :size="32" color="#909399"></flyer-icon>
						<flyer-icon name="warn" :size="32" color="#f0ad4e"></flyer-icon>
						<flyer-icon name="close" :size="32" color="#dd524d"></flyer-icon>
						<flyer-icon name="home" :size="32" color="#007aff"></flyer-icon>
					</view>
				</view>
			</view>

			<!-- 可点击图标 -->
			<view class="demo-section">
				<text class="demo-section-title">可点击图标</text>
				<view class="demo-content">
					<view class="clickable-demo">
						<flyer-icon 
							name="favorites" 
							:size="32" 
							:color="isFavorite ? '#ff6b6b' : '#cccccc'"
							:clickable="true"
							@click="toggleFavorite"
						></flyer-icon>
						<text class="click-tip">点击切换收藏状态</text>
					</view>
				</view>
			</view>

			<!-- Unicode 直接使用 -->
			<view class="demo-section">
				<text class="demo-section-title">Unicode 直接使用</text>
				<text class="demo-section-desc">直接传入Unicode字符</text>
				<view class="demo-content">
					<view class="unicode-demo">
						<flyer-icon name="\uE605" :size="32" color="#007aff"></flyer-icon>
						<flyer-icon name="\uE600" :size="32" color="#007aff"></flyer-icon>
						<flyer-icon name="\uEA06" :size="32" color="#4cd964"></flyer-icon>
						<flyer-icon name="\uEA0F" :size="32" color="#f0ad4e"></flyer-icon>
					</view>
				</view>
			</view>

			<!-- 自定义字体（示例说明） -->
			<view class="demo-section">
				<text class="demo-section-title">自定义 iconfont</text>
				<text class="demo-section-desc">项目内置的自定义字体图标，包含丰富的金融、生活服务类图标</text>
				<view class="demo-content">
					<!-- 金融理财类 -->
					<view class="iconfont-category">
						<text class="category-title">金融理财</text>
						<view class="icon-grid">
							<view class="icon-item" v-for="(icon, index) in financeIcons" :key="index">
								<flyer-icon 
									:name="icon.name" 
									font-family="iconfont"
									:size="24" 
									color="#ff6b35"
								></flyer-icon>
								<text class="icon-name">{{ icon.label }}</text>
							</view>
						</view>
					</view>

					<!-- 生活服务类 -->
					<view class="iconfont-category">
						<text class="category-title">生活服务</text>
						<view class="icon-grid">
							<view class="icon-item" v-for="(icon, index) in lifeIcons" :key="index">
								<flyer-icon 
									:name="icon.name" 
									font-family="iconfont"
									:size="24" 
									color="#4cd964"
								></flyer-icon>
								<text class="icon-name">{{ icon.label }}</text>
							</view>
						</view>
					</view>

					<!-- 常用功能类 -->
					<view class="iconfont-category">
						<text class="category-title">常用功能</text>
						<view class="icon-grid">
							<view class="icon-item" v-for="(icon, index) in commonIcons" :key="index">
								<flyer-icon 
									:name="icon.name" 
									font-family="iconfont"
									:size="24" 
									color="#666666"
								></flyer-icon>
								<text class="icon-name">{{ icon.label }}</text>
							</view>
						</view>
					</view>

					<view class="usage-example">
						<text class="code-block">
&lt;!-- 使用图标名称 --&gt;
&lt;flyer-icon name="caipiao" font-family="iconfont" :size="24" color="#ff6b35"&gt;&lt;/flyer-icon&gt;

&lt;!-- 直接使用Unicode --&gt;
&lt;flyer-icon name="\ue600" font-family="iconfont" :size="24" color="#ff6b35"&gt;&lt;/flyer-icon&gt;
						</text>
					</view>
				</view>
			</view>
		</view>
	<!-- #ifdef APP -->
	</scroll-view>
	<!-- #endif -->
</template>

<script setup lang="uts">
	// 定义图标类型
	type IconData = {
		name: string,
		desc?: string,
		label?: string
	}

	// 响应式数据
	const isFavorite = ref<boolean>(false)

	// uni-icon 图标数据
	const uniIcons = ref<IconData[]>([
		{ name: 'forward', desc: '前进' },
		{ name: 'back', desc: '返回' },
		{ name: 'share', desc: '分享' },
		{ name: 'favorites', desc: '收藏' },
		{ name: 'home', desc: '首页' },
		{ name: 'more', desc: '更多' },
		{ name: 'close', desc: '关闭' },
		{ name: 'down', desc: '下拉' },
		{ name: 'circle', desc: '圆圈' },
		{ name: 'info', desc: '信息' },
		{ name: 'info-circle', desc: '信息圆圈' },
		{ name: 'success', desc: '成功' },
		{ name: 'success-circle', desc: '成功圆圈' },
		{ name: 'success-no-circle', desc: '成功无圆圈' },
		{ name: 'cancel-circle', desc: '取消圆圈' },
		{ name: 'warn', desc: '警告' },
		{ name: 'clear', desc: '清除' },
		{ name: 'download', desc: '下载' },
		{ name: 'waiting', desc: '等待' },
		{ name: 'search', desc: '搜索' }
	])

	// 金融图标数据
	const financeIcons = ref<IconData[]>([
		{ name: 'caipiao', label: '彩票' },
		{ name: 'huiyuanqia', label: '会员卡' },
		{ name: 'shuzirenminbi', label: '数字人民币' },
		{ name: 'bitebi', label: '比特币' },
		{ name: 'jijin', label: '基金' },
		{ name: 'yanglaojin', label: '养老金' },
		{ name: 'xinyongdaikuan', label: '信用贷款' },
		{ name: 'jiebei', label: '借呗' },
		{ name: 'qihuo', label: '期货' },
		{ name: 'dingqicunkuan', label: '定期存款' },
		{ name: 'huangjin', label: '黄金' },
		{ name: 'gongjijin', label: '公积金' },
		{ name: 'gupiao', label: '股票' },
		{ name: 'yingshou', label: '应收' },
		{ name: 'yingfu', label: '应付' },
		{ name: 'jiangjin', label: '奖金' }
	])

	// 生活服务图标数据
	const lifeIcons = ref<IconData[]>([
		{ name: 'fanqia', label: '饭卡' },
		{ name: 'gas-station-fill', label: '加油站' },
		{ name: 'yibaoka', label: '医保卡' },
		{ name: 'zhufangzujin', label: '住房租金' },
		{ name: 'deposit', label: '退押金' },
		{ name: 'hospital', label: '医院' },
		{ name: 'restaurant', label: '餐厅' },
		{ name: 'home2', label: '家庭' },
		{ name: 'beer', label: '啤酒' },
		{ name: 'phone', label: '电话' },
		{ name: 'movie', label: '电影' },
		{ name: 'pet-paw', label: '宠物' }
	])

	// 常用功能图标数据
	const commonIcons = ref<IconData[]>([
		{ name: 'cash', label: '现金' },
		{ name: 'coupon', label: '优惠券' },
		{ name: 'exchange', label: '兑换' },
		{ name: 'calendar', label: '日历' },
		{ name: 'piechart', label: '饼图' },
		{ name: 'vip', label: 'VIP' },
		{ name: 'thumbup-line', label: '点赞' },
		{ name: 'thumbdown-line', label: '点踩' },
		{ name: 'star-line', label: '星星' },
		{ name: 'search-line', label: '搜索' },
		{ name: 'shopping-cart', label: '购物车' },
		{ name: 'gift', label: '礼品' },
		{ name: 'heart', label: '爱心' },
		{ name: 'run', label: '跑步' },
		{ name: 'cherry', label: '樱桃' },
		{ name: 'gamepad', label: '游戏' }
	])

	// 图标点击事件处理
	const handleIconClick = (iconName: string) => {
		uni.showToast({
			title: `点击了 ${iconName} 图标`,
			icon: 'none',
			duration: 1500
		})
	}

	// 收藏切换处理
	const toggleFavorite = () => {
		isFavorite.value = !isFavorite.value
		uni.showToast({
			title: isFavorite.value ? '已收藏' : '取消收藏',
			icon: 'none',
			duration: 1000
		})
	}
</script>

<style>
	.container {
		flex: 1;
	}
	
	.demo-page {
		padding: 20px;
		background-color: #f2f3f5;
	}
	
	.demo-header {
		margin-bottom: 30px;
	}
	
	.demo-title {
		font-size: 24px;
		font-weight: bold;
		color: #333333;
		margin-bottom: 8px;
	}
	
	.demo-desc {
		font-size: 14px;
		color: #909399;
		line-height: 20px;
	}
	
	.demo-section {
		margin-bottom: 30px;
		background-color: #ffffff;
		border-radius: 8px;
		padding: 20px;
	}
	
	.demo-section-title {
		font-size: 16px;
		font-weight: bold;
		color: #333333;
		margin-bottom: 8px;
	}
	
	.demo-section-desc {
		font-size: 12px;
		color: #909399;
		margin-bottom: 16px;
		line-height: 18px;
	}
	
	.demo-content {
		flex-direction: column;
	}
	
	/* 图标网格 */
	.icon-grid {
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: space-between;
	}
	
	.icon-item {
		width: 70px;
		align-items: center;
		margin-bottom: 20px;
		padding: 12px;
		border-radius: 6px;
		background-color: #f8f9fa;
	}
	
	.icon-name {
		font-size: 10px;
		color: #666666;
		margin-top: 6px;
		text-align: center;
		line-height: 14px;
	}
	
	/* 尺寸演示 */
	.size-demo {
		flex-direction: row;
		align-items: center;
		justify-content: space-around;
	}
	
	.size-item {
		align-items: center;
	}
	
	.size-label {
		font-size: 12px;
		color: #666666;
		margin-top: 6px;
	}
	
	/* 颜色演示 */
	.color-demo {
		flex-direction: row;
		justify-content: space-around;
		align-items: center;
		padding: 20px 0;
	}
	
	/* 可点击演示 */
	.clickable-demo {
		align-items: center;
		padding: 20px;
		border: 1px solid #e1e8ed;
		border-radius: 6px;
		background-color: #fafafa;
	}
	
	.click-tip {
		font-size: 12px;
		color: #666666;
		margin-top: 8px;
	}
	
	/* Unicode演示 */
	.unicode-demo {
		flex-direction: row;
		justify-content: space-around;
		align-items: center;
		padding: 20px 0;
	}
	
	/* 自定义字体演示 */
	.custom-font-demo {
		padding: 16px;
		background-color: #f8f9fa;
		border-radius: 6px;
	}
	
	.iconfont-category {
		margin-bottom: 24px;
	}
	
	.category-title {
		font-size: 14px;
		font-weight: bold;
		color: #333333;
		margin-bottom: 12px;
		padding-left: 8px;
		border-left: 3px solid #007aff;
	}
	
	.usage-example {
		margin-top: 20px;
		padding: 16px;
		background-color: #f8f9fa;
		border-radius: 6px;
	}
	
	.code-block {
		font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
		font-size: 12px;
		color: #476582;
		line-height: 18px;
		margin-bottom: 12px;
	}
	
	.note {
		font-size: 12px;
		color: #f0ad4e;
		line-height: 16px;
	}
</style>
