<template>
  <view v-if="shouldShow" class="flyer-dialog-overlay" :style="overlayStyle" @click="handleOverlayClick">
    <view class="flyer-dialog-modal">
      <!-- 标题区域 -->
      <view v-if="hasTitle" class="flyer-dialog-header">
        <text class="flyer-dialog-title">{{ state.title }}</text>
      </view>

      <!-- 内容区域 -->
      <view class="flyer-dialog-body" :class="{ 'has-title': hasTitle }">
        <text class="flyer-dialog-content">{{ state.content }}</text>
      </view>

      <!-- 按钮区域 -->
      <view class="flyer-dialog-footer">
        <view v-if="state.showCancel" class="flyer-dialog-btn flyer-dialog-btn--cancel" @click="handleCancel">
          <text class="flyer-dialog-btn-text flyer-dialog-btn-text--cancel">{{ state.cancelText }}</text>
        </view>
        <view class="flyer-dialog-btn flyer-dialog-btn--confirm" @click="handleConfirm">
          <text class="flyer-dialog-btn-text flyer-dialog-btn-text--confirm">{{ state.confirmText }}</text>
        </view>
      </view>
    </view>
  </view>
</template>

<script setup lang="uts">
import { computed } from 'vue'
import { state, cancel, confirm } from './store.uts'

// 定义组件选项
defineOptions({
  name: 'FlyerDialog'
})

// 定义 props
const props = defineProps<{
  id?: string
}>()

const hasTitle = computed(()=>{
  return state.title != null && state.title != ''
})

const shouldShow = computed(() => {
  if (state.targetId == null) {
    return state.visible
  }
  return state.visible && state.targetId == props.id
})

// 计算遮罩样式
const overlayStyle = computed(() => {
  return {
    zIndex: state.zIndex
  }
})

// 事件处理函数
function handleCancel() {
    console.log('取消按钮被点')
  cancel()
}

function handleConfirm() {
    console.log('确认按钮被点')
  confirm()
}

function handleOverlayClick() {
  if (state.maskClosable) {
    handleCancel()
  }
}
</script>

<style>
.flyer-dialog-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.3);
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0;
}

.flyer-dialog-modal {
  background-color: #ffffff;
  border-radius: 16px;
  width: 80%;
  max-width: 320px;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  transition-property: all;
  transition-duration: 0.3s;
  font-size: 16px;
}

/* 头部样式 */
.flyer-dialog-header {
  padding-top: 26px;
  padding-left: 24px;
  padding-right: 24px;
  padding-bottom: 0;
}

.flyer-dialog-title {
  font-size: 16px;
  
  color: #323233;
  text-align: center;
  line-height: 24px;
}

/* 内容区域样式 */
.flyer-dialog-body {
  padding: 26px 24px;
  min-height: 100rpx;
  align-items: center;
  justify-content: center;
  flex: 1;
  max-height: 500rpx;
}

.flyer-dialog-content {
  font-size: 14px;
  color: #323233;
  line-height: 20px;
  text-align: center;
}

/* 当有标题时，调整内容区域样式 */
.flyer-dialog-body.has-title {
  padding-top: 8px;
}

.flyer-dialog-body.has-title .flyer-dialog-content {
  color: #646566;
}

/* 按钮区域样式 */
.flyer-dialog-footer {
  flex-direction: row;
  border-top-width: 1px;
  border-top-style: solid;
  border-top-color: #ebedf0;
  overflow: hidden;
}

.flyer-dialog-btn {
  flex: 1;
  height: 48px;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  transition-property: background-color;
  transition-duration: 0.2s;
}

.flyer-dialog-btn--cancel {
  border-right-width: 1px;
  border-right-style: solid;
  border-right-color: #ebedf0;
}

.flyer-dialog-btn:active {
  opacity: 0.8;
}

.flyer-dialog-btn--cancel:active {
  background-color: #f5f5f5;
}

.flyer-dialog-btn--confirm:active {
  background-color: #f0fff4;
}

.flyer-dialog-btn-text {
  font-size: 14px;
  line-height: 20px;
}

.flyer-dialog-btn-text--cancel {
  color: #646566;
}

.flyer-dialog-btn-text--confirm {
  color: #1989fa;
  
}

/* 响应式调�?*/
@media (max-width: 375px) {
  .flyer-dialog-modal {
    width: 85%;
    max-width: 300px;
  }
  
  .flyer-dialog-title {
    font-size: 15px;
  }
  
  .flyer-dialog-content {
    font-size: 13px;
  }
  
  .flyer-dialog-btn-text {
    font-size: 13px;
  }
}
</style>
