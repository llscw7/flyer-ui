<template>
	<view 
		:class="buttonClasses"
		:style="buttonStyle"
		@click="handleClick"
	>
		<!-- 加载状态 -->
		<view v-if="showLoading" class="flyer-button__loading">
			<text class="flyer-button__loading-icon">●</text>
		</view>
		
		<!-- 图标 -->
		<view v-if="showIcon" class="flyer-button__icon">
			<text class="flyer-button__icon-text">{{ icon }}</text>
		</view>
		
		<!-- 按钮文字 -->
		<text v-if="showText" class="flyer-button__text">
			<slot>{{ text }}</slot>
		</text>
	</view>
</template>

<script lang="uts">
	// 定义 Props 类型
	type ButtonType = 'default' | 'primary' | 'success' | 'warning' | 'danger' | 'info'
	type ButtonSize = 'large' | 'normal' | 'small' | 'mini'

	export default {
		name: 'FlyerButton',
		
		props: {
			// 按钮类型
			type: {
				type: String,
				default: 'default'
			},
			// 按钮尺寸
			size: {
				type: String,
				default: 'normal'
			},
			// 按钮文字
			text: {
				type: String,
				default: ''
			},
			// 是否禁用
			disabled: {
				type: Boolean,
				default: false
			},
			// 是否加载中
			loading: {
				type: Boolean,
				default: false
			},
			// 是否朴素按钮
			plain: {
				type: Boolean,
				default: false
			},
			// 是否圆角按钮
			round: {
				type: Boolean,
				default: false
			},
			// 是否块级按钮
			block: {
				type: Boolean,
				default: false
			},
			// 图标
			icon: {
				type: String,
				default: ''
			},
			// 自定义样式
			customStyle: {
				type: Object,
				default: () => {
					return {} as UTSJSONObject
				}
			}
		},

		computed: {
			// 计算属性 - 按钮类样式
			buttonClasses(): string[] {
				const classes: string[] = ['flyer-button']
				
				classes.push(`flyer-button--${this.type}`)
				classes.push(`flyer-button--${this.size}`)
				
				if (this.disabled) classes.push('flyer-button--disabled')
				if (this.loading) classes.push('flyer-button--loading')
				if (this.plain) classes.push('flyer-button--plain')
				if (this.round) classes.push('flyer-button--round')
				if (this.block) classes.push('flyer-button--block')
				
				return classes
			},

			// 计算属性 - 是否显示加载图标
			showLoading(): boolean {
				return this.loading
			},

			// 计算属性 - 是否显示图标
			showIcon(): boolean {
				return this.icon.length > 0 && !this.loading
			},

			// 计算属性 - 是否显示文本
			showText(): boolean {
				return this.text.length > 0
			},

			// 计算属性 - 动态样式
		buttonStyle(): UTSJSONObject {
			// UTS 中无法遍历 UTSJSONObject，直接创建基础样式对象
			let baseStyle: UTSJSONObject = {}
			
			// 如果有自定义样式，进行类型转换后使用
			if (this.customStyle != null) {
				baseStyle = this.customStyle as UTSJSONObject
			}
			
			// 如果是块级按钮，确保宽度为100%
			if (this.block) {
				// 创建新对象以避免修改原始 customStyle
				const blockStyle: UTSJSONObject = {}
				if (this.customStyle != null) {
					const customStyleObj = this.customStyle as UTSJSONObject
					// 简单的属性复制，只复制常见的样式属性
					if (customStyleObj['color'] != null) {
						blockStyle['color'] = customStyleObj['color']
					}
					if (customStyleObj['backgroundColor'] != null) {
						blockStyle['backgroundColor'] = customStyleObj['backgroundColor']
					}
					if (customStyleObj['fontSize'] != null) {
						blockStyle['fontSize'] = customStyleObj['fontSize']
					}
					if (customStyleObj['border'] != null) {
						blockStyle['border'] = customStyleObj['border']
					}
					if (customStyleObj['borderRadius'] != null) {
						blockStyle['borderRadius'] = customStyleObj['borderRadius']
					}
					if (customStyleObj['padding'] != null) {
						blockStyle['padding'] = customStyleObj['padding']
					}
					if (customStyleObj['margin'] != null) {
						blockStyle['margin'] = customStyleObj['margin']
					}
				}
				blockStyle['width'] = '100%'
				baseStyle = blockStyle
			}
			
			return baseStyle
			}
		},

		methods: {
			// 点击事件处理
			handleClick(event: any): void {
				if (this.disabled || this.loading) {
					return
				}
				this.$emit('click', event)
			}
		}
	}
</script>

<style>
	.flyer-button {
		position: relative;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		padding: 12px 24px;
		border-width: 1px;
		border-style: solid;
		border-radius: 4px;
		font-size: 14px;
		line-height: 20px;
		text-align: center;
		transition: all 0.3s;
		white-space: nowrap;
		overflow: hidden;
	}
	
	/* 按钮类型样式 */
	.flyer-button--default {
		background-color: #ffffff;
		border-color: #d9d9d9;
		color: #333333;
	}
	
	.flyer-button--primary {
		background-color: #007aff;
		border-color: #007aff;
		color: #ffffff;
	}
	
	.flyer-button--success {
		background-color: #4cd964;
		border-color: #4cd964;
		color: #ffffff;
	}
	
	.flyer-button--warning {
		background-color: #f0ad4e;
		border-color: #f0ad4e;
		color: #ffffff;
	}
	
	.flyer-button--danger {
		background-color: #dd524d;
		border-color: #dd524d;
		color: #ffffff;
	}
	
	.flyer-button--info {
		background-color: #909399;
		border-color: #909399;
		color: #ffffff;
	}
	
	/* 朴素按钮样式 */
	.flyer-button--plain.flyer-button--default {
		background-color: #ffffff;
		color: #333333;
	}
	
	.flyer-button--plain.flyer-button--primary {
		background-color: #ecf5ff;
		color: #007aff;
	}
	
	.flyer-button--plain.flyer-button--success {
		background-color: #f0f9ff;
		color: #4cd964;
	}
	
	.flyer-button--plain.flyer-button--warning {
		background-color: #fdf6ec;
		color: #f0ad4e;
	}
	
	.flyer-button--plain.flyer-button--danger {
		background-color: #fef0f0;
		color: #dd524d;
	}
	
	.flyer-button--plain.flyer-button--info {
		background-color: #f4f4f5;
		color: #909399;
	}
	
	/* 按钮尺寸样式 */
	.flyer-button--large {
		padding: 15px 30px;
		font-size: 16px;
		line-height: 24px;
	}
	
	.flyer-button--normal {
		padding: 12px 24px;
		font-size: 14px;
		line-height: 20px;
	}
	
	.flyer-button--small {
		padding: 8px 16px;
		font-size: 12px;
		line-height: 18px;
	}
	
	.flyer-button--mini {
		padding: 4px 12px;
		font-size: 10px;
		line-height: 16px;
	}
	
	/* 圆角按钮 */
	.flyer-button--round {
		border-radius: 20px;
	}
	
	/* 块级按钮 */
	.flyer-button--block {
		width: 100%;
		display: flex;
	}
	
	/* 禁用状态 */
	.flyer-button--disabled {
		opacity: 0.5;
	}
	
	/* 加载状态 */
	.flyer-button--loading {
		opacity: 0.8;
	}
	
	.flyer-button__loading {
		margin-right: 8px;
	}
	
	.flyer-button__loading-icon {
		/* 移除inherit，使用默认颜色 */
	}
	
	.flyer-button__icon {
		margin-right: 8px;
	}
	
	.flyer-button__icon-text {
		font-size: 14px;
	}
	
	.flyer-button__text {
		font-size: 14px;
		line-height: 20px;
	}
</style>
